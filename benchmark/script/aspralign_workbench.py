import os
import subprocess
import pandas as pd
from alive_progress import alive_bar
import time


def __fill_csv(pairs, aspralign_jar, output, bar=None):
    df = pd.DataFrame(columns=['Molecule 1', 'Molecule 2', 'Distance', 'Execution time [ns]'])
    for molecule_1, molecule_2 in pairs:
        init_time = time.time_ns()
        distance = subprocess.run(
            ['java', '-jar', aspralign_jar, '-a', molecule_1,
             molecule_2,
             '-d'], capture_output=True).stdout.strip()[11:]
        end_time = time.time_ns()
        # calculate distance and add to dataframe
        df.loc[len(df)] = [molecule_1, molecule_2, distance, end_time - init_time]
        # update progress bar
        bar()
    # save dataframe to csv file
    df.to_csv(output, index=False)


def __csv_workbench(molecules_dir, output_file, aspralign_workbench_jar):
    # run aspralign workbench and suppress output
    subprocess.run(['java', '-jar', aspralign_workbench_jar, '-f', molecules_dir], stdout=subprocess.DEVNULL,
                   stderr=subprocess.DEVNULL)
    # read csv file with pandas
    dataframe = pd.read_csv(os.path.join(molecules_dir, 'ASPRAlignComparisonResults.csv'))

    # drop unnecessary columns
    dataframe.drop(dataframe.columns[1:5], axis=1, inplace=True)
    dataframe.drop(dataframe.columns[2:7], axis=1, inplace=True)

    # change column names
    dataframe.columns = ['Molecule 1', 'Molecule 2', 'Distance', 'Execution time [ns]']

    # remove extension from molecule names
    dataframe['Molecule 1'] = dataframe['Molecule 1'].map(lambda x: os.path.splitext(x)[0])
    dataframe['Molecule 2'] = dataframe['Molecule 2'].map(lambda x: os.path.splitext(x)[0])

    # save pandas dataframe to csv file
    dataframe.to_csv(output_file, index=False)

    # remove csv file generated by aspralign workbench
    os.remove(os.path.join(molecules_dir, 'ASPRAlignComparisonResults.csv'))
    os.remove(os.path.join(molecules_dir, 'ASPRAlignProcessedStructures.csv'))


def __csv(molecules_dirs, output_files, aspralign_jar):
    for directory, output in zip(molecules_dirs, output_files):
        # list of molecules in the directory
        molecules = sorted(os.listdir(directory))
        # use list comprehension to get all pairs of molecules
        molecule_pairs = [(molecule_1, molecule_2) for i, molecule_1 in enumerate(molecules, start=1) for molecule_2 in
                          molecules[i:]]
        # create progress bar
        with alive_bar(len(molecule_pairs), title=f'generating {os.path.basename(output)}',
                       monitor='{count}/{total} molecules calculated', elapsed=True) as bar:
            __fill_csv(molecule_pairs, aspralign_jar, output, bar)


def csv(molecules_dirs, output_files, jar):
    # save current working directory
    current_path = os.getcwd()

    # change directory to use default aspralign config file
    os.chdir(os.path.dirname(jar))

    # create csv for each molecule
    __csv(molecules_dirs, output_files, jar)

    # change directory back to original path
    os.chdir(current_path)
